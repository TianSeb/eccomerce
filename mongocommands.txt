mongo --host 127.0.0.1 --port 27017 -u user -p pass

db.use("ecommerce")

db.createCollection("productos")
db.createCollection("mensajes")

Agregar 10 documentos con valores distintos a las colecciones mensajes y productos. 
El formato de los documentos debe estar en correspondencia con el que venimos utilizando en el entregable con base de datos MariaDB. 
Definir las claves de los documentos en relación a los campos de las tablas de esa base. 
En el caso de los productos, poner valores al campo precio entre los 100 y 5000 pesos
(eligiendo valores intermedios, ej: 120, 580, 900, 1280, 1700, 2300, 2860, 3350, 4320, 4990).

db.productos.insertMany([
	{
		"nombre": "mayonesa",
		"precio": 800,
		"foto": "https://cdn3.iconfinder.com/data/icons/food-and-beverages-7/64/03_chicken_fries_thigh_food-512.png",
		"descripcion": null,
		"codigo":"ez122",
		"stock": 2
	},
	{
		"nombre": "mostaza",
		"precio": 4000,
		"foto": "https://cdn3.iconfinder.com/data/icons/food-and-beverages-7/64/09_juice_drink_beverages_orange-512.png",
		"descripcion": null,
		"codigo":"ez121",
		"stock": 19
	},
	{
		"nombre": "kechu",
		"precio": 3500,
		"foto": "https://cdn3.iconfinder.com/data/icons/food-and-beverages-7/64/20_hot_dog_sussage_food-512.png",
		"descripcion": null,
		"codigo":"ez120",
		"stock": 20
	},
	{
		"nombre": "tripagorda",
		"precio": 100,
		"foto": "https://cdn3.iconfinder.com/data/icons/food-and-beverages-7/64/20_hot_dog_sussage_food-512.png",
		"descripcion": null,
		"codigo":"ez123",
		"stock": 11
	},
	{
		"nombre": "salame milan",
		"precio": 1700,
		"foto": "https://cdn3.iconfinder.com/data/icons/food-and-beverages-7/64/20_hot_dog_sussage_food-512.png",
		"descripcion": null,
		"codigo":"ez124",
		"stock": 202
	},
	{
		"nombre": "tiramisu",
		"precio": 4900,
		"foto": "https://cdn3.iconfinder.com/data/icons/food-and-beverages-7/64/20_hot_dog_sussage_food-512.png",
		"descripcion": null,
		"codigo":"ez125",
		"stock": 2
	},
	{
		"nombre": "pescao",
		"precio": 400,
		"foto": "https://cdn3.iconfinder.com/data/icons/food-and-beverages-7/64/20_hot_dog_sussage_food-512.png",
		"descripcion": null,
		"codigo":"ez144",
		"stock": 222
	}
], {ordered: false})

db.mensajes.insertMany([
    {
        userEmail: "jorge@burrito.com",
        msg: "primeramente quisiera saludar...",
        date: "11/12/2022"
    },
    {
        userEmail: "luca@prodan.com",
        msg: "Los lentes son para el sol...",
        date: "12/12/2022"
    },
    {
        userEmail: "jorge@burrito.com",
        msg: "Al viciloberprestizarakar...",
        date: "12/12/2022"
    },
    {
        userEmail: "luca@prodan.com",
        msg: "Y para la gente que me da asco...",
        date: "14/12/2022"
    },
    {
        userEmail: "mollo@arnedo.com",
        msg: "Hace que hace, y no dice...",
        date: "15/12/2022"
    },
],{ordered:true})
 
-- Listar todos los documentos en cada colección.
db.productos.find().pretty()
db.mensajes.find().pretty()

-- Mostrar la cantidad de documentos almacenados en cada una de ellas.
db.productos.countDocuments({})
db.mensajes.countDocuments({})

-- Realizar un CRUD sobre la colección de productos: Agregar un producto más en la colección de productos 
db.productos.insertOne({
		"nombre": "milanesa",
		"precio": 2400,
		"foto": "https://cdn3.iconfinder.com/data/icons/food-and-beverages-7/64/09_juice_drink_beverages_orange-512.png",
		"descripcion": null,
		"codigo":"ez128",
		"stock": 12
})

-- Realizar una consulta por nombre de producto específico
db.productos.find({nombre: "tripagorda"}).pretty()
 
-- Listar los productos con precio menor a 1000 pesos.
db.productos.find({"precio": {$lt:1000}}).pretty()

-- Listar los productos con precio entre los 1000 a 3000 pesos.
db.productos.find({
    $and:[{"precio": {$gte:1000}}, {"precio": {$lte:3000}}]
}).pretty()

-- Listar los productos con precio mayor a 3000 pesos.
db.productos.find({"precio": {$gt:3000}}).pretty()

-- Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
db.productos.find({}).sort({"precio":1}).skip(2).limit(1).pretty()

-- Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
db.productos.updateMany({}, {$set: {"stock":100}})

-- Cambiar el stock a cero de los productos con precios mayores a 4000 pesos.
db.productos.updateMany({"precio":{$gt:4000}}, {$set: {"stock":0}})

-- Borrar los productos con precio menor a 1000 pesos 
db.productos.deleteMany({precio: {$lt:1000}})

-- Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.
use admin
db.createUser(
	{
		user: "pepe",
		pwd: "asd456",
		roles: [
			{ role: "read", db: "eccomerce"}
		]
	} 
)

mongo --host 127.0.0.1 --port 27017 -u pepe -p asd456
